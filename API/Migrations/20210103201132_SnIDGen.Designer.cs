// <auto-generated />
using System;
using HomeWeather.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HomeWeather.Migrations
{
    [DbContext(typeof(HWDbContext))]
    [Migration("20210103201132_SnIDGen")]
    partial class SnIDGen
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("Relational:Sequence:.snID", "'snID', '', '1', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.thID", "'thID', '', '1', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HomeWeather.Models.Sensors", b =>
                {
                    b.Property<long>("snID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValueSql("NEXT VALUE FOR snID");

                    b.Property<DateTime?>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime?>("EditAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ROM")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("snID");

                    b.ToTable("Sensors");
                });

            modelBuilder.Entity("HomeWeather.Models.TempHistory", b =>
                {
                    b.Property<int>("thID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR thID");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<float>("Temperature")
                        .HasColumnType("real");

                    b.Property<long>("snID")
                        .HasColumnType("bigint");

                    b.HasKey("thID");

                    b.HasIndex("snID");

                    b.ToTable("TempHistory");
                });

            modelBuilder.Entity("HomeWeather.Models.TempHistory", b =>
                {
                    b.HasOne("HomeWeather.Models.Sensors", "Sensors")
                        .WithMany()
                        .HasForeignKey("snID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
